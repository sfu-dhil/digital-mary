{% macro make(context, key, name, path, itemsKey='items') %}
    {% set value = attribute(context, key) %}
    {% if attribute(context, key ~ 'Other') is defined %}
        {% set note = attribute(context, key ~ 'Other') %}
    {% endif %}
    {% set class = "item-details" %}
    {% set item_class = class ~ '__' ~ name|u.snake %}
    {% set has_note = note is defined and not(note is null or note is empty) %}
    {% set content %}
        {% if value is not null %}
            {% if path is not null %}
                {% if key == 'url' %}
                    <a href="{{ value }}">{{ path }}</a>
                {% else %}
                    {{ _self.makeLinks(value, path, itemsKey) }}
                {% endif %}
            {% else %}
                {{ value|raw }}
            {% endif %}
        {% endif %}
        {% if has_note %}
            <div class="{{ class }}__note {{ item_class }}">
                {{ note|raw }}
            </div>
        {% endif %}
    {% endset %}
    {% set content = content|trim()|spaceless %}
    {% set has_content = content is not empty %}
    {{ _self.render(_context) }}
{% endmacro %}

{% macro render(this) %}
    {% set div_class = [this.class, this.item_class, 'hasContent-' ~ _self.bool2Str(this.has_content), 'hasNote-' ~ _self.bool2Str(this.has_note)]|join(' ') %}

    <div class="{{ div_class }}">
        <h2 class="{{ this.class }}__header {{ this.item_class }}">{{ this.name }}</h2>
        <div class="{{ this.class }}__content {{ this.item_class }}">
            {% if this.has_content %}
                {{ this.content|raw }}
            {% else %}
                {{ 'â€”' }}
            {% endif %}
        </div>
    </div>
{% endmacro %}



{% macro makeLinks(value, path, itemsKey) %}
    {% set iterable = value is iterable %}
    {# Cast the links to an array to make it easier to sort through them #}
    {% set links = iterable ? value : [value] %}
    {% if links|length > 0 %}
        <ul>
            {% for link in links %}
                {% set items = attribute(link, itemsKey) %}
                <li>
                    <a href="{{ path(path, {'id': link.id}) }}">{{ link }}<span class="badge">{{ items|length }}</span></a>
                </li>
            {% endfor %}
        </ul>
    {% endif %}
{% endmacro %}




{% macro iterate(items, route) %}
    {% set arr = [] %}
    {% for item in items %}
        {% set link %}
            {% apply spaceless %}
                <a href="{{ path(route, {'id': item.id}) }}">{{ item.label }}</a>
            {% endapply %}
        {% endset %}
        {% set arr = arr|merge([link|trim]) %}
    {% endfor %}
    {{ arr|join(', ')|raw }}
{% endmacro %}

{% macro bool2Str(bool) %}
    {{- bool ? 'true' : 'false' -}}
{% endmacro %}

{% macro firstParaString(text) %}
    {% set paragraphs = text|split('</p>') %}
    {% set first_paragraph = paragraphs|first ~ '</p>' %}
    {% set string = first_paragraph|striptags|trim %}

    {# Then remove spaces, and remove trailing period #}
    {{- string|trim('.', side='right') -}}
{% endmacro %}
